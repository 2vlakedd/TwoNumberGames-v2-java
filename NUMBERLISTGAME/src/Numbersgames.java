/**
 *
 * @author Joshua
 */
import javax.swing.JOptionPane;


public class Numbersgames extends javax.swing.JFrame {
    
    
    
  
int NUMBER1 = (int)(Math.random()*10);

int random = (int)(Math.random()*4);

int NUMBER2 = (int)(Math.random()*10);

int answer =0,
        
correct =0,
        
correctaddition =0,
        
correctsubtraction =0,
        
correctmultiplication =0,
        
correctdivision =0,
        
doneaddition =0,
        
donesubtraction =0,
        
donemultiplication =0,
        
donedivision =0,
        
done;

    public Numbersgames() {
        
        this.answer = 0;
        initComponents();
        NUM1.setText(String.valueOf(NUMBER1));
        NUM2.setText(String.valueOf(NUMBER2));
        
        if (random == 1){
            RAND.setText("+");
            answer = NUMBER1 + NUMBER2;
        }
        if (random == 2){
            RAND.setText("-");
            answer = NUMBER1 - NUMBER2;
        }
        if (random == 3){
            RAND.setText("*");
            answer = NUMBER1 * NUMBER2;
        }
        if (random == 4){
            RAND.setText("/");
            answer = NUMBER1 / NUMBER2;
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NUM1 = new javax.swing.JLabel();
        RAND = new javax.swing.JLabel();
        NUM2 = new javax.swing.JLabel();
        ANS = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        BUTTON = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DIS = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        NUM1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        NUM1.setText("00");

        RAND.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        RAND.setText("+");

        NUM2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        NUM2.setText("00");

        ANS.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setText("=");

        BUTTON.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        BUTTON.setText("SUBMIT");
        BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTONActionPerformed(evt);
            }
        });

        DIS.setColumns(20);
        DIS.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DIS.setRows(5);
        jScrollPane1.setViewportView(DIS);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BUTTON, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                            .addComponent(ANS)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(NUM1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RAND)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NUM2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NUM1)
                    .addComponent(RAND)
                    .addComponent(NUM2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ANS)))
                .addGap(18, 18, 18)
                .addComponent(BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addGap(90, 90, 90))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTONActionPerformed
        // TODO add your handling code here:
        int B1;
        try{
            B1 = Integer.parseInt(this.ANS.getText());
            if(B1 == answer){
                JOptionPane.showMessageDialog(this, "Your Answer is CORRECT", "Answer Two Number", JOptionPane.INFORMATION_MESSAGE);
                int option = JOptionPane.showConfirmDialog(this, "Answer Another Exprition", "Answer Two Number", JOptionPane.YES_NO_CANCEL_OPTION);
                if(random == 1){
                    if (B1 == answer){
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Correct\n");
                        correctaddition ++;
                        correct ++;
                        doneaddition ++;
                        done ++;
                    }
                    else{
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Wrong\n");
                        doneaddition ++;
                    }
                }
                if(random == 2){
                    if (B1 == answer){
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Correct\n");
                        correctsubtraction ++;
                        correct++;
                        donesubtraction ++;
                        done ++;
                    }
                    else{
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Wrong\n");
                        donesubtraction ++;
                    }
                }
                if(random == 3){
                    if (B1 == answer){
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Correct\n");
                        correctmultiplication ++;
                        correct ++;
                        donemultiplication ++;
                        done ++;
                    }
                    else{
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Wrong\n");
                        donemultiplication ++;
                    }
                }
                if(random == 4){
                    if (B1 == answer){
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Correct\n");
                        correctdivision ++;
                        correct ++;
                        donedivision ++;
                        done ++;
                    }
                    else{
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Wrong\n");
                        donedivision ++;
                    }
                }
                if(option == 0){
                    NUMBER1 = (int)(Math.random()*10);
                    random = (int)(Math.random()*4)+1;
                    NUMBER2 = (int)(Math.random()*10);
                    answer =0;
                    NUM1.setText(String.valueOf(NUMBER1));
                    NUM2.setText(String.valueOf(NUMBER2));

                    if (random == 1){
                        RAND.setText("+");
                        answer = NUMBER1 + NUMBER2;
                    }
                    if (random == 2){
                        RAND.setText("-");
                        answer = NUMBER1 - NUMBER2;
                    }
                    if (random == 3){
                        RAND.setText("*");
                        answer = NUMBER1 * NUMBER2;
                    }
                    if (random == 4){
                        RAND.setText("/");
                        answer = NUMBER1 / NUMBER2;
                    }
                    ANS.setText("");
                }

                else{
                    JOptionPane.showMessageDialog(this, " Your Score is: " + correct + "/" + done + "\n"
                        + "\n" + "Breakdown\n" + "addition: "
                        +correctaddition + "/" + doneaddition + "\n" + "subtraction: "
                        +correctsubtraction + "/" + donesubtraction + "\n" + "division: "
                        +correctdivision + "/" + donedivision + "\n" + "Multiplication: "
                        +correctmultiplication + "/" + donemultiplication,
                        "Answer Two Number", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

            }
            else{

                int option = JOptionPane.showConfirmDialog(this, "Answer Another Exprition", "Answer Two Number", JOptionPane.YES_NO_CANCEL_OPTION);
                if(random == 0){
                    if (B1 == answer){
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Correct\n");
                        correctaddition ++;
                        correct ++;
                        doneaddition ++;
                        done ++;
                    }
                    else{
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText() +"= "+answer+ "wrong\n");
                        doneaddition ++;
                    }
                }
                if(random == 1){
                    if (B1 == answer){
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Correct\n");
                        correctsubtraction ++;
                        correct++;
                        donesubtraction ++;
                        done ++;
                    }
                    else{
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Wrong\n");
                        donesubtraction ++;
                    }
                }
                if(random == 2){
                    if (B1 == answer){
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Correct\n");
                        correctmultiplication ++;
                        correct ++;
                        donemultiplication ++;
                        done ++;
                    }
                    else{
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Wrong\n");
                        donemultiplication ++;
                    }
                }
                if(random == 3){
                    if (B1 == answer){
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Correct\n");
                        correctdivision ++;
                        correct ++;
                        donedivision ++;
                        done ++;
                    }
                    else{
                        DIS.append(NUM1.getText() +RAND.getText()+NUM2.getText()+"= "+answer+ "Wrong\n");
                        donedivision ++;
                    }
                }
                if(option == 0){
                    NUMBER1 = (int)(Math.random()*10);
                    random = (int)(Math.random()*4)+1;
                    NUMBER2 = (int)(Math.random()*10);
                    answer =0;
                    NUM1.setText(String.valueOf(NUMBER1));
                    NUM2.setText(String.valueOf(NUMBER2));

                    if (random == 1){
                        RAND.setText("+");
                        answer = NUMBER1 + NUMBER2;
                    }
                    if (random == 2){
                        RAND.setText("-");
                        answer = NUMBER1 - NUMBER2;
                    }
                    if (random == 3){
                        RAND.setText("*");
                        answer = NUMBER1 * NUMBER2;
                    }
                    if (random == 4){
                        RAND.setText("/");
                        answer = NUMBER1 / NUMBER2;
                    }
                    ANS.setText("");
                }
                else{
                    JOptionPane.showMessageDialog(this, " Your Score is: " + correct + "/" + done + "\n"
                        + "\n" + "Breakdown\n" + "addition: "
                        +correctaddition + "/" + doneaddition + "\n" + "subtraction: "
                        +correctsubtraction + "/" + donesubtraction + "\n" + "division: "
                        +correctdivision + "/" + donedivision + "\n" + "Multiplication: "
                        +correctmultiplication + "/" + donemultiplication,
                        "Answer Two Number", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(0);
                }

            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Incorrect Value of Number", "Error", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_BUTTONActionPerformed

    }
    public static void main(String args[]) {
     
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Numbersgames().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ANS;
    private javax.swing.JButton BUTTON;
    private javax.swing.JTextArea DIS;
    private javax.swing.JLabel NUM1;
    private javax.swing.JLabel NUM2;
    private javax.swing.JLabel RAND;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
